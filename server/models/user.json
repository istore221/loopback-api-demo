{
  "name": "user",
  "plural": "users",
  "base": "User",
  "strict": true,
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "allowEternalTokens": true
  },
  "mixins": {
    "TimeStamp": {
      "createdAt": "created",
      "updatedAt": "modified",
      "required": false,
      "validateUpsert": true,
      "silenceWarnings": false
    }
  },
  "properties": {
    "firstName": {
      "type": "string",
      "required": true
    },
    "lastName": {
      "type": "string",
      "required": true
    },
    "username": {
      "type": "string",
      "required": true
    },
    "locked": {
      "type": "boolean",
      "required": true,
      "default": false
    },
    "avatar": {
      "type": "string",
      "default": "http://html-templates.multipurposethemes.com/bootstrap-4/admin/lion-admin/images/user2-160x160.jpg"
    },
    "email": false,
    "emailVerified": false,
    "realm": false
  },
  "validations": [],
  "relations": {
    "roles": {
      "type": "hasMany",
      "model": "role",
      "foreignKey": "principalId",
      "through": "RoleMapping"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "Administrator",
      "permission": "ALLOW",
      "property": "*"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "me"
    }
  ],
  "methods": {
    "replaceOrCreateUserWithRoles": {
      "accepts": [
        {
         "arg": "data",
         "type": "object",
         "required": true,
         "description": "Model instance data",
         "http": {
           "source": "body"
         }
       }
      ],
      "returns": [
       {
         "arg": "result",
         "type": "object",
         "root": true,
         "description": ""
       }
     ],
      "description": "Create a new instance of the model and persist it into the data source.",
      "http": [
       {
         "path": "/replaceOrCreateUserWithRoles",
         "verb": "post"
       }
     ]
   },
   "me": {
     "accepts": [
       {"arg": "options", "type": "object", "http": "optionsFromRequest"}
     ],
     "returns": [
      {
        "arg": "result",
        "type": "object",
        "root": true,
        "description": ""
      }
    ],
     "description": "Get the user associated with the token value",
     "http": [
      {
        "path": "/me",
        "verb": "get"
      }
    ]
  }

  }
}
